plugins {
    id 'org.jetbrains.kotlin.jvm' version "1.3.72"
    id "org.jetbrains.kotlin.plugin.allopen" version "1.3.72"
    id 'io.quarkus'
}

repositories {
    mavenLocal()
    mavenCentral()
    maven {
        url "https://dl.bintray.com/oberstrike/maven"
    }
}

dependencies {

    //Test
    implementation("org.testcontainers:postgresql:1.14.3")
    implementation 'com.maju.quarkus:testcontainer-quarkus:1.0.0'

    implementation("com.github.dasniko:testcontainers-keycloak:1.4.0")
    implementation("org.testcontainers:testcontainers:1.14.3")
    implementation("org.testcontainers:junit-jupiter:1.14.3")

    implementation 'io.quarkus:quarkus-oidc'
    implementation 'io.quarkus:quarkus-config-yaml'
    implementation 'io.quarkus:quarkus-resteasy-jsonb'
    implementation 'io.quarkus:quarkus-rest-client'
    implementation 'io.quarkus:quarkus-hibernate-orm-panache-kotlin'
    implementation 'io.quarkus:quarkus-keycloak-authorization'
    implementation enforcedPlatform("${quarkusPlatformGroupId}:${quarkusPlatformArtifactId}:${quarkusPlatformVersion}")
    implementation 'io.quarkus:quarkus-resteasy'
    implementation 'org.jetbrains.kotlin:kotlin-stdlib-jdk8'
    implementation 'io.quarkus:quarkus-smallrye-openapi'
    implementation 'io.quarkus:quarkus-jdbc-postgresql'
    testImplementation 'io.quarkus:quarkus-junit5'
    testImplementation 'io.rest-assured:kotlin-extensions'
}

configurations.all {
    resolutionStrategy.eachDependency { DependencyResolveDetails details ->
        if (details.requested.name == 'log4j') {
            details.useTarget "org.slf4j:log4j-over-slf4j:1.7.5"
        }
    }
}

group 'de.core.discord'
version '1.0.0-SNAPSHOT'

quarkus {
    setOutputDirectory("$projectDir/build/classes/kotlin/main")
}

quarkusDev {
    setSourceDir("$projectDir/src/main/kotlin")
}

allOpen {
    annotation("javax.ws.rs.Path")
    annotation("javax.enterprise.context.ApplicationScoped")
    annotation("io.quarkus.test.junit.QuarkusTest")
}

java {
    sourceCompatibility = JavaVersion.VERSION_11
    targetCompatibility = JavaVersion.VERSION_11
}

compileKotlin {
    kotlinOptions.jvmTarget = JavaVersion.VERSION_11
    kotlinOptions.javaParameters = true
}

compileTestKotlin {
    kotlinOptions.jvmTarget = JavaVersion.VERSION_11
}
test {
    systemProperty "java.util.logging.manager", "org.jboss.logmanager.LogManager"
}